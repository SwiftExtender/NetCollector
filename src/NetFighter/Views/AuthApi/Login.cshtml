@using NetFighter.RequestModels
@model AuthModel

@{
    ViewData["Title"] = "Login";
    Layout = null;
    var baseUrl = $"{Context.Request.Scheme}://{Context.Request.Host}";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NetFighter Login</title>
    
    <script src="@baseUrl/lib/axios.min.js"></script>
    <script src="@baseUrl/lib/vue.global.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .login-container {
            width: 100%;
            max-width: 420px;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            backdrop-filter: blur(10px);
            animation: fadeIn 0.5s ease-out;
        }

        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .login-header {
            background: linear-gradient(90deg, #4361ee, #3a0ca3);
            color: white;
            padding: 30px 20px;
            text-align: center;
        }

        .login-header h1 {
            font-weight: 600;
            font-size: 1.8rem;
            margin-bottom: 8px;
        }

        .login-body {
            padding: 30px;
        }

        .form-group {
            margin-bottom: 24px;
            position: relative;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #2d3748;
            font-size: 0.95rem;
        }

        .form-input {
            width: 100%;
            padding: 14px;
            border: 1px solid #cbd5e0;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f8fafc;
        }

        .form-input:focus {
            outline: none;
            border-color: #4361ee;
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.2);
        }

        .password-toggle {
            position: absolute;
            right: 12px;
            top: 42px;
            cursor: pointer;
            color: #718096;
        }

        .remember {
            display: flex;
            align-items: center;
            margin-bottom: 24px;
        }

        .remember input {
            margin-right: 10px;
            width: 18px;
            height: 18px;
        }

        .btn-login {
            width: 100%;
            padding: 14px;
            background: linear-gradient(90deg, #4361ee, #3a0ca3);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.05rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);
        }

        .btn-login:hover {
            transform: translateY(-2px);
            box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
        }

        .btn-login:disabled {
            background: #a0aec0;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .links {
            text-align: center;
            margin-top: 24px;
            font-size: 0.9rem;
        }

        .links a {
            color: #4361ee;
            text-decoration: none;
            margin: 0 8px;
            transition: color 0.2s;
        }

        .links a:hover {
            color: #3a0ca3;
            text-decoration: underline;
        }

        .error-message {
            color: #e53e3e;
            font-size: 0.9rem;
            margin-top: 8px;
            text-align: center;
            height: 20px;
            transition: all 0.3s ease;
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
            margin-right: 10px;
        }

        @@keyframes spin {
            to { transform: rotate(360deg); }
        }

        @@media (max-width: 480px) {
            .login-container {
                max-width: 100%;
            }

            .login-body {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div id="app" class="login-container">
        <div class="login-header">
            <h1>NetFighter</h1>
            <p>Sign in to continue to your account</p>
        </div>

        <div class="login-body">
            <form @@submit.prevent="submitLogin">
                <div class="form-group">
                    <label class="form-label" for="username">Username</label>
                    <input v-model="form.username"
                           id="username"
                           type="text"
                           class="form-input"
                           placeholder="Enter your username"
                           required>
                </div>

                <div class="form-group">
                    <label class="form-label" for="password">Password</label>
                    <input v-model="form.password"
                           id="password"
                           :type="showPassword ? 'text' : 'password'"
                           class="form-input"
                           placeholder="Enter your password"
                           required>
                    <span class="password-toggle" @@click="showPassword = !showPassword">
                        {{ showPassword ? 'X' : '👁️' }}
                    </span>
                </div>

                <div class="remember">
                    <input v-model="form.rememberMe"
                           type="checkbox"
                           id="remember">
                    <label for="remember">Remember me</label>
                </div>

                <div class="error-message">
                    {{ errorMessage }}
                </div>

                <button :disabled="loading" class="btn-login" type="submit">
                    <span v-if="loading" class="loading"></span>
                    {{ loading ? 'Signing in...' : 'Sign In' }}
                </button>
            </form>
        </div>
    </div>

    <script>
        const { createApp, ref } = Vue;

        createApp({
            setup() {
                const form = ref({
                    username: '',
                    password: '',
                    rememberMe: false
                });

                const showPassword = ref(false);
                const loading = ref(false);
                const errorMessage = ref('');

                const submitLogin = async () => {
                    errorMessage.value = '';
                    loading.value = true;

                    try {
                        // Simulate API call - replace with your actual API endpoint
                        await axios.post('/Login', form.value);

                        // For demo - remove this timeout in real implementation
                        //await new Promise(resolve => setTimeout(resolve, 1500));

                        // Redirect after successful login
                        window.location.href = '/Dashboard';
                    } catch (error) {
                        errorMessage.value = 'Invalid username or password';
                        console.error('Login error:', error);
                    } finally {
                        loading.value = false;
                    }
                };

                return {
                    form,
                    showPassword,
                    loading,
                    errorMessage,
                    submitLogin
                };
            }
        }).mount('#app');
    </script>
</body>
</html>